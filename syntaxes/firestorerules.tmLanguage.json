{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "firestorerules",
	"scopeName": "source.firebase",
	"patterns": [
		{
			"include": "#firestore-root"
		},
		{
			"include": "#version"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.firestorerules",
					"match": "\\b(if|return|match|allow|service)\\b"
				},
				{
					"name": "keyword.operator.firestorerules",
					"match": "(==|!=|&&|is|\\|{2}|<=|>=|<|>)"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.firestorerules",
					"begin": "\"|\\'",
					"end": "\"|\\'",
					"patterns": [
						{
							"name": "constant.character.escape.firestorerules",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.unquoted.firestorerules",
					"match": "\\/\\w((\\w|\\/)*)(?=\\W)",
					"patterns": [
						{
							"name": "constant.character.escape.firestorerules",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric.firestorerules",
					"match": "\\d+"
				},
				{
					"name": "constant.language.firestorerules",
					"match": "\\b(true|false|write|read|get|list|update|delete|create)\\b"
				}
			]
		},
		"comments": {
			"match": "\/\/.*",
			"name": "comment.line"
		},
		"type-primitive": {
			"name": "support.type.primitive.fs",
			"match": "\\b(bool|bytes|constraint|duration|float|int|latlng|list|number|map|string|timestamp|path)\\b"
		},
		"type-builtin-literals": {
			"name": "support.type.builtin.fs",
			"match": "\\b(true|false|write|read|get|list|update|delete|create)\\b"
		},
		"version": {
			"name": "comment.block.documentation.fs",
			"match": "rules_version? =? '\\d'?;"
		},
		"firestore-root": {
			"name": "meta.root.fs",
			"begin": "(service) (cloud)\\.(firestore) {",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.fs"
				},
				"2": {
					"name": "keyword.control.fs"
				},
				"3": {
					"name": "storage.type.class.fs"
				}
			},
			"end": "\\b\\}",
			"patterns": [
				{
					"include": "#document-matcher"
				}
			]
		},
		"document-matcher": {
			"name": "meta.matcher.fs",
			"begin": "match",
			"beginCaptures": {
				"0": {
					"name": "keyword.control.fs"
				}
			},
			"end": "\\b\\}",
			"patterns": [
				{
					"include": "#document-matcher"
				},
				{
					"include": "#matcher-path"
				},
				{
					"include": "#function-declaration"
				},
				{
					"include": "#allow-statement"
				}
			]
		},
		"matcher-path": {
			"name": "string.unquoted.fs",
			"begin": "(?<=match) \\/",
			"end": "(?= \\{$)",
			"patterns": [
				{
					"include": "#matcher-param"
				}
			]
		},
		"matcher-param": {
			"name": "variable.parameter.fs",
			"begin": "\\{",
			"end": "\\}"
		},
		"function-declaration": {
			"name": "meta.function.fs",
			"begin": "(function)\\s+(\\w+)\\s?(\\()([^)]*)(\\))\\s+\\{",
			"beginCaptures": {
				"1": {
					"name": "keyword.control.fs"
				},
				"2": {
					"name": "storage.type.function.fs"
				},
				"3": {
					"name": "punctuation.definition.parameters.fs"
				},
				"4": {
					"name": "variable.parameter.function.fs"
				},
				"5": {
					"name": "punctuation.definition.parameters.fs"
				}
			},
			"end": "(?<!\\w)\\}"
		},
		"allow-statement": {
			"name": "meta.allow.fs",
			"begin": "(allow)\\s((write|read|get|list|update|delete|create)(\\s*,\\s*(write|read|get|list|update|delete|create))*)\\s*\\:",
			"beginCaptures": {
				"1": {
					"name": "storage.type.function.fs"
				},
				"2": {
					"name": "support.type.builtin.fs"
				}
			},
			"end": "\\;|(?=allow)|(?=match)|\\}",
			"patterns": [
				{
					"include": "#if-statement"
				}
			]
		},
		"if-statement": {
			"name": "keyword.control.fs",
			"match": "if"
		}
	}
}